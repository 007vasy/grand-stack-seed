type User {
  id: ID!
  email: String!
  password: String!
  username: String!
}

type Query {
  me: User @cypher(statement: "MATCH (u:User {id: $user}) RETURN u")
  users: [User!] @cypher(statement: "MATCH (u:User) RETURN u")
  user(id: ID!): User
    @cypher(statement: "MATCH (u:User) WHERE u.id = $id RETURN u")
}

type Mutation {
  RegisterUser(email: String!, password: String!, username: String!): User!
    @cypher(
      statement: "CALL apoc.create.uuids(1) YIELD uuid CREATE (u:User {email: $email, password: $password, username: $username, id: uuid}) RETURN u"
    )
  Login(email: String!, password: String!): String
    @cypher(
      statement: "MATCH (u:User {email: $email}) WITH { username: u.username, id: u.id, password: u.password} as LoginInfo RETURN LoginInfo"
    )
}
